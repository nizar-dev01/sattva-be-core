version: "3.9"

services:
  db:
    image: postgres:alpine3.17
    volumes:
      - dev-db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    expose:
      - ${DB_PORT}
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USER}"]
      interval: .5s
      timeout: 2s
      retries: 10

  app:
    build:
      context: .
      args:
        - DEV=true
    volumes:
      - ./app:/app
      - dev-static-data:/vol/web
    command: >
      sh -c "
        python manage.py wait_for_db &&
        python manage.py migrate &&
        python manage.py runserver 0.0.0.0:8000
      "
    environment:
      - DB_ENGINE=${DB_ENGINE}
      - DB_HOST=db
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DEBUG=${DEBUG}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - DJANGO_CSRF_TRUSTED_ORIGINS=${DJANGO_CSRF_TRUSTED_ORIGINS}
      - DJANGO_CORS_ALLOWED_ORIGINS=${DJANGO_CORS_ALLOWED_ORIGINS}
    depends_on:
      db:
        condition: service_healthy

  proxy:
    build:
      context: ./proxy
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - app
    ports:
      - 8080:80
    volumes:
      - dev-static-data:/vol
  
  pgadmin:
    image: dpage/pgadmin4
    profiles:
      - "debug"
    environment:
      - PGADMIN_LISTEN_ADDRESS=${PGADMIN_LISTEN_ADDRESS}
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - 80

volumes:
  dev-db-data:
  dev-static-data: